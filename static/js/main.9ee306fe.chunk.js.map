{"version":3,"sources":["Context/StatsContext.js","Context/ResultsContext.js","Functions/possessions.js","Functions/freeThrows.js","Functions/oddsToMoneyline.js","Functions/projected.js","Functions/pick.js","Functions/winOrLose.js","Functions/resultsData.js","Projections/seasonProj.js","Projections/seasonLocProj.js","Projections/last10Proj.js","Projections/last10LocProj.js","Components/titleBanner.js","Components/home.js","Functions/resultCount.js","Functions/totalPoints.js","Functions/resultCount2.js","Components/results.js","Components/resultsDetailsDate.js","Components/scrollButton.js","Components/resultDetails.js","Components/resultsVegas.js","Functions/actualResults.js","Components/vegasDetailsDate.js","Components/vegasDetails.js","Components/resultsLineGrinding.js","Components/lineGrindingDetailsDate.js","Components/lineGrindingDetails.js","Components/compareDetailsDate.js","Components/compareDetails.js","App.js","index.js"],"names":["StatsContext","createContext","ResultsContext","possessions","fga","tov","fta","orb","freeThrows","points","threes","fieldGoals","oddsToMoneyline","odds","decimalML","projected","away","home","leagueAve","awayLeagAve","homeLeagAve","undefined","scoreAway","scoreHome","moneylineAway","moneylineHome","spreadAway","spreadHome","total","awayPoss","homePoss","avgPoss","gamePoss","awayFT","three","fg","awayFT_opp","points_opp","three_opp","fg_opp","homeFT","homeFT_opp","leagueAveFT","awayAdjO","awayAdjD","homeAdjO","homeAdjD","pythAway","pythHome","oddsAway","oddsHome","toFixed","Number","pickSpread","projecteAwayLine","actualAwayLine","difference","pick","condition","pickTotal","projecteTotal","lineTotal","WinOrLoseSpread","awayScore","homeScore","teamSpread","gameResult","WinOrLoseTotal","result","ResultsData","stats","oddsKeys","Odds","scores","Scores","Object","keys","data","map","date","game","gameStats","stat","awayPoints","team_away","score_away","homePoints","team_home","score_home","sp","awayTeam","homeTeam","seasonStats","Season","SeasonLeagueAvg","SeasonProj","spScoreAway","spScoreHome","spMoneylineAway","spMoneylineHome","spSpreadAway","spSpreadHome","spTotal","slp","seasonAway","SeasonAway","seasonHome","SeasonHome","leagAveAway","SeasonLeagueAveAway","leagAveHome","SeasonLeagueAveHome","SeasonLocProj","slpScoreAway","slpScoreHome","slpMoneylineAway","slpMoneylineHome","slpSpreadAway","slpSpreadHome","slpTotal","lp","last10Stats","Last10","Last10Proj","lpScoreAway","lpScoreHome","lpMoneylineAway","lpMoneylineHome","lpSpreadAway","lpSpreadHome","lpTotal","llp","last10Away","Last10Away","last10Home","Last10Home","Last10LocProj","llpScoreAway","llpScoreHome","llpMoneylineAway","llpMoneylineHome","llpSpreadAway","llpSpreadHome","llpTotal","sp4PickSpread","spread_away","sp4PickTotal","sp4SpreadPick","sp4SpreadCond","sp4TotalPick","slp4PickSpread","slp4PickTotal","slp4SpreadPick","slp4SpreadCond","slp4TotalPick","lp4PickSpread","lp4PickTotal","lp4SpreadPick","lp4SpreadCond","lp4TotalPick","llp4PickSpread","llp4PickTotal","llp4SpreadPick","llp4SpreadCond","llp4TotalPick","lg1PickSpread","spread_open_away","lg1PickTotal","total_open","lg1SpreadPick","lg1SpreadCond","lg1TotalPick","sp4ResultSpread","sp4ResultTotal","slp4ResultSpread","slp4ResultTotal","lp4ResultSpread","lp4ResultTotal","llp4ResultSpread","llp4ResultTotal","lg1ResultSpread","lg1ResultTotal","push","console","log","TitleBanner","className","to","type","class","Home","results","useContext","length","id","disabled","role","aria-hidden","ResultCount","name","resultsSpread","resultsTotal","dataType","pickDiff","resultKeys","totalGames","spreadWon","spreadTotal","totalWon","totalTotal","totalOverWon","totalUnderWon","totalOver","totalUnder","totals","resultsData","pointsAway","pointsHome","projPointsAway","projPointsHome","reducer","num","pointsAwayTotal","reduce","pointsHomeTotal","pointsTotal","pointsAwayAvg","pointsHomeAvg","pointsAvg","projPointsAwayTotal","projPointsHomeTotal","projPointsTotal","projPointsAwayAvg","projPointsHomeAvg","projPointsAvg","totalCount","ResultCount2","resultsSpread1","resultsSpread2","resultsTotal1","resultsTotal2","resultsKeys","Results","inputResults","count","count2","onClick","ResultsDetailsDate","props","selected","dateArray","scope","spread_home","ScrollButton","useState","position","setPosition","window","addEventListener","scrollY","scrollTo","top","behavior","ResultsDetails","ResultsVegas","vegasPoints","openVegasPoints","overWins","underWins","openOverWins","openUnderWins","dogCovers","favCovers","openDogCovers","openFavCovers","dogWins","favWins","vegasPointsAve","openVegasPointsAve","ActualResults","VegasDetailsDate","spread_open_home","VegasDetails","ResultsLineGrinding","LineGrindingDetailsDate","LineGrindingDetails","CompareDetailsDate","CompareDetails","App","setStats","setResults","setSelected","useEffect","fetchData","address","a","axios","get","then","res","catch","err","obj","fetchAllData","Provider","value","path","component","exact","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9ee306fe.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const StatsContext = createContext();","import { createContext } from \"react\";\r\n\r\nexport const ResultsContext = createContext();","export function possessions(fga, tov, fta, orb) {\r\n    let possessions = fga + tov + 0.5*fta - orb\r\n\r\n    return possessions\r\n}","export function freeThrows(points, threes, fieldGoals) {\r\n    let FT = points - 3*threes - 2*(fieldGoals - threes)\r\n    \r\n    return FT\r\n}","export function oddsToMoneyline(odds) {\r\n    let decimalML = ((100 - odds) / odds) + 1\r\n    let moneyline\r\n\r\n    if (decimalML >= 2) {\r\n        moneyline = (decimalML - 1) * 100\r\n    } else {\r\n        moneyline = -100 / (decimalML - 1)\r\n    }\r\n\r\n    return moneyline\r\n}","import { possessions } from \"./possessions\"\r\nimport { freeThrows } from \"./freeThrows\"\r\nimport { oddsToMoneyline } from \"./oddsToMoneyline\"\r\n\r\nexport function projected(away, home, leagueAve, awayLeagAve = leagueAve, homeLeagAve = leagueAve) {\r\n    if (away === undefined || home === undefined) {\r\n        return ([{\r\n            scoreAway: null,\r\n            scoreHome: null,\r\n            moneylineAway: null, \r\n            moneylineHome: null,\r\n            spreadAway: null,\r\n            spreadHome: null,\r\n            total: null\r\n        }])\r\n    }\r\n\r\n    let awayPoss = possessions(away.fga, away.tov, away.fta, away.orb)\r\n    let homePoss = possessions(home.fga, home.tov, home.fta, home.orb)\r\n    let avgPoss = possessions(leagueAve.fga, leagueAve.tov, leagueAve.fta, leagueAve.orb)\r\n    let gamePoss = (awayPoss/avgPoss)*homePoss\r\n\r\n    let awayFT = freeThrows(away.points, away.three, away.fg)\r\n    let awayFT_opp = freeThrows(away.points_opp, away.three_opp, away.fg_opp)\r\n    let homeFT = freeThrows(home.points, home.three, home.fg)\r\n    let homeFT_opp = freeThrows(home.points_opp, home.three_opp, home.fg_opp)\r\n    let leagueAveFT = freeThrows(leagueAve.points, leagueAve.three, leagueAve.fg)\r\n\r\n    let awayAdjO = (away.points - awayFT) / awayPoss\r\n    let awayAdjD = (away.points_opp - awayFT_opp) / awayPoss\r\n    let homeAdjO = (home.points - homeFT) / homePoss\r\n    let homeAdjD = (home.points_opp - homeFT_opp) / homePoss\r\n\r\n    let pythAway = awayAdjO**14 / (awayAdjO**14 + awayAdjD**14)\r\n    let pythHome = homeAdjO**14 / (homeAdjO**14 + homeAdjD**14)\r\n\r\n    let oddsAway = ((pythAway - pythAway*pythHome) / (pythAway + pythHome - 2*pythAway*pythHome))*100\r\n    let oddsHome = ((pythHome - pythAway*pythHome) / (pythAway + pythHome - 2*pythAway*pythHome))*100\r\n    let moneylineAway = oddsToMoneyline(oddsAway)\r\n    let moneylineHome = oddsToMoneyline(oddsHome)\r\n        \r\n    let scoreAway = (awayAdjO*gamePoss/(awayLeagAve.points - leagueAveFT))*homeAdjD*gamePoss + awayFT*homeFT_opp/leagueAveFT\r\n    let scoreHome = (homeAdjO*gamePoss/(homeLeagAve.points - leagueAveFT))*awayAdjD*gamePoss + homeFT*awayFT_opp/leagueAveFT\r\n    \r\n    let spreadHome = (scoreAway - scoreHome).toFixed(1)\r\n    let spreadAway = (scoreHome - scoreAway).toFixed(1)\r\n    let total = (scoreAway + scoreHome).toFixed(1)\r\n\r\n    return ([{\r\n        scoreAway: Number(scoreAway.toFixed(1)),\r\n        scoreHome: Number(scoreHome.toFixed(1)),\r\n        moneylineAway: Number(moneylineAway.toFixed(1)), \r\n        moneylineHome: Number(moneylineHome.toFixed(1)),\r\n        spreadAway: Number(spreadAway),\r\n        spreadHome: Number(spreadHome),\r\n        total: Number(total)\r\n    }])\r\n}","export function pickSpread(projecteAwayLine, actualAwayLine, difference) {\r\n    let pick, condition\r\n\r\n    if (projecteAwayLine === '') {\r\n        pick = 'No bet'\r\n        condition = ''\r\n    } else if (Number(actualAwayLine) - Number(projecteAwayLine) >= Number(difference)) {\r\n        pick = 'Away'\r\n        condition = Number(actualAwayLine)\r\n    } else if (Number(actualAwayLine) - Number(projecteAwayLine) <= -Number(difference)) {\r\n        pick = 'Home'\r\n        condition = -1 * Number(actualAwayLine)\r\n    } else {\r\n        pick = 'No bet'\r\n        condition = ''\r\n    }\r\n\r\n    return [pick, condition]\r\n}\r\n\r\nexport function pickTotal(projecteTotal, lineTotal, difference) {\r\n    let pick\r\n\r\n    if (projecteTotal === '' || lineTotal === '') {\r\n        pick = 'No bet'\r\n    } else if (Number(lineTotal) - Number(projecteTotal) >= Number(difference)) {\r\n        pick = 'Under'\r\n    } else if (Number(lineTotal) - Number(projecteTotal) <= -Number(difference)) {\r\n        pick = 'Over'\r\n    } else {\r\n        pick = 'No bet'\r\n    }\r\n    \r\n    return pick\r\n}","export function WinOrLoseSpread(awayScore, homeScore, pick, teamSpread) {\r\n    let gameResult\r\n    let result\r\n\r\n    if (pick === 'Away') {\r\n        gameResult = Number(homeScore) - Number(awayScore)\r\n    } else if (pick === 'Home') {\r\n        gameResult = Number(awayScore) - Number(homeScore)\r\n    }\r\n    \r\n    if (pick === 'No bet') {\r\n        result = '-'\r\n    } else if (Number(teamSpread) -gameResult > 0) {\r\n        result = 'Win'\r\n    } else if (Number(teamSpread) - gameResult < 0) {\r\n        result = 'Lose'\r\n    } else {\r\n        result = 'Push'\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function WinOrLoseTotal(awayScore, homeScore, pick, total) {\r\n    let gameResult = Number(awayScore) + Number(homeScore)\r\n    let result\r\n    \r\n    if (pick === 'No bet') {\r\n        result = '-'\r\n    } else if (pick === 'Over') {\r\n        if (Number(gameResult) - Number(total) > 0) {\r\n            result = 'Win'\r\n        } else if (Number(gameResult) - Number(total) < 0) {\r\n            result = 'Lose'\r\n        } else {\r\n            result = 'Push'\r\n        }\r\n    } else if (pick === 'Under') {\r\n        if (Number(total) - Number(gameResult) > 0) {\r\n            result = 'Win'\r\n        } else if (Number(total) - Number(gameResult) < 0) {\r\n            result = 'Lose'\r\n        } else {\r\n            result = 'Push'\r\n        }\r\n    }\r\n    \r\n    return result\r\n}","import { SeasonProj } from '../Projections/seasonProj';\r\nimport { SeasonLocProj } from '../Projections/seasonLocProj';\r\nimport { Last10Proj } from '../Projections/last10Proj';\r\nimport { Last10LocProj } from '../Projections/last10LocProj';\r\nimport { pickSpread, pickTotal } from './pick';\r\nimport { WinOrLoseSpread, WinOrLoseTotal } from './winOrLose';\r\n\r\nexport function ResultsData(stats) {\r\n    const odds = stats.Odds\r\n    const scores = stats.Scores\r\n\r\n    let oddsKeys\r\n    if (odds === undefined) {\r\n        oddsKeys = []\r\n    } else {\r\n        oddsKeys = Object.keys(odds)\r\n    }\r\n\r\n    let data = {}\r\n\r\n    oddsKeys.map(date => {\r\n        data[date] = []\r\n        odds[date].map(game => {\r\n// Insert betting odds numbers\r\n            let gameStats = {}\r\n            let gameKeys = Object.keys(game)\r\n            gameKeys.map(stat => {\r\n                gameStats[stat] = game[stat]    \r\n            })\r\n// Insert game scores\r\n            let awayPoints = scores[date][game.team_away]\r\n            if (awayPoints === undefined) {\r\n                gameStats.score_away = \"Cancelled\"\r\n            } else {\r\n                gameStats.score_away = awayPoints.points\r\n            }\r\n            let homePoints = scores[date][game.team_home]\r\n            if (homePoints === undefined) {\r\n                gameStats.score_home = \"Cancelled\"\r\n            } else {\r\n                gameStats.score_home = homePoints.points\r\n            }\r\n// Insert projected numbers\r\n// sp = Season Projected, lp = Last 10 Projected, slp = Season Location Projected, llp = Last 10 Location Projected, lg = Line Grinding\r\n            let sp = SeasonProj(date, game.team_away, game.team_home, stats)\r\n            gameStats.spScoreAway = sp[0].scoreAway\r\n            gameStats.spScoreHome = sp[0].scoreHome\r\n            gameStats.spMoneylineAway = sp[0].moneylineAway \r\n            gameStats.spMoneylineHome = sp[0].moneylineHome\r\n            gameStats.spSpreadAway = sp[0].spreadAway\r\n            gameStats.spSpreadHome = sp[0].spreadHome\r\n            gameStats.spTotal = sp[0].total\r\n\r\n            let slp = SeasonLocProj(date, game.team_away, game.team_home, stats)\r\n            gameStats.slpScoreAway = slp[0].scoreAway\r\n            gameStats.slpScoreHome = slp[0].scoreHome\r\n            gameStats.slpMoneylineAway = slp[0].moneylineAway \r\n            gameStats.slpMoneylineHome = slp[0].moneylineHome\r\n            gameStats.slpSpreadAway = slp[0].spreadAway\r\n            gameStats.slpSpreadHome = slp[0].spreadHome\r\n            gameStats.slpTotal = slp[0].total\r\n\r\n            let lp = Last10Proj(date, game.team_away, game.team_home, stats)\r\n            gameStats.lpScoreAway = lp[0].scoreAway\r\n            gameStats.lpScoreHome = lp[0].scoreHome\r\n            gameStats.lpMoneylineAway = lp[0].moneylineAway \r\n            gameStats.lpMoneylineHome = lp[0].moneylineHome\r\n            gameStats.lpSpreadAway = lp[0].spreadAway\r\n            gameStats.lpSpreadHome = lp[0].spreadHome\r\n            gameStats.lpTotal = lp[0].total\r\n            \r\n            let llp = Last10LocProj(date, game.team_away, game.team_home, stats)\r\n            gameStats.llpScoreAway = llp[0].scoreAway\r\n            gameStats.llpScoreHome = llp[0].scoreHome\r\n            gameStats.llpMoneylineAway = llp[0].moneylineAway \r\n            gameStats.llpMoneylineHome = llp[0].moneylineHome\r\n            gameStats.llpSpreadAway = llp[0].spreadAway\r\n            gameStats.llpSpreadHome = llp[0].spreadHome\r\n            gameStats.llpTotal = llp[0].total\r\n// Insert projected picks\r\n            let sp4PickSpread = pickSpread(gameStats.spSpreadAway, gameStats.spread_away, 4)\r\n            let sp4PickTotal = pickTotal(gameStats.spTotal, gameStats.total, 4)\r\n            gameStats.sp4SpreadPick = sp4PickSpread[0]\r\n            gameStats.sp4SpreadCond = sp4PickSpread[1]\r\n            gameStats.sp4TotalPick = sp4PickTotal\r\n\r\n            let slp4PickSpread = pickSpread(gameStats.slpSpreadAway, gameStats.spread_away, 4)\r\n            let slp4PickTotal = pickTotal(gameStats.slpTotal, gameStats.total, 4)\r\n            gameStats.slp4SpreadPick = slp4PickSpread[0]\r\n            gameStats.slp4SpreadCond = slp4PickSpread[1]\r\n            gameStats.slp4TotalPick = slp4PickTotal\r\n\r\n            let lp4PickSpread = pickSpread(gameStats.lpSpreadAway, gameStats.spread_away, 4)\r\n            let lp4PickTotal = pickTotal(gameStats.lpTotal, gameStats.total, 4)\r\n            gameStats.lp4SpreadPick = lp4PickSpread[0]\r\n            gameStats.lp4SpreadCond = lp4PickSpread[1]\r\n            gameStats.lp4TotalPick = lp4PickTotal\r\n       \r\n            let llp4PickSpread = pickSpread(gameStats.llpSpreadAway, gameStats.spread_away, 4)\r\n            let llp4PickTotal = pickTotal(gameStats.llpTotal, gameStats.total, 4)\r\n            gameStats.llp4SpreadPick = llp4PickSpread[0]\r\n            gameStats.llp4SpreadCond = llp4PickSpread[1]\r\n            gameStats.llp4TotalPick = llp4PickTotal\r\n\r\n            let lg1PickSpread = pickSpread(gameStats.spread_open_away, gameStats.spread_away, 1)\r\n            let lg1PickTotal = pickTotal(gameStats.total_open, gameStats.total, 1)\r\n            gameStats.lg1SpreadPick = lg1PickSpread[0]\r\n            gameStats.lg1SpreadCond = lg1PickSpread[1]\r\n            gameStats.lg1TotalPick = lg1PickTotal\r\n  \r\n// Insert projected results\r\n            gameStats.sp4ResultSpread = WinOrLoseSpread(gameStats.score_away, gameStats.score_home, gameStats.sp4SpreadPick, gameStats.sp4SpreadCond)\r\n            gameStats.sp4ResultTotal = WinOrLoseTotal(gameStats.score_away, gameStats.score_home, gameStats.sp4TotalPick, gameStats.total)\r\n\r\n            gameStats.slp4ResultSpread = WinOrLoseSpread(gameStats.score_away, gameStats.score_home, gameStats.slp4SpreadPick, gameStats.slp4SpreadCond)\r\n            gameStats.slp4ResultTotal = WinOrLoseTotal(gameStats.score_away, gameStats.score_home, gameStats.slp4TotalPick, gameStats.total)\r\n\r\n            gameStats.lp4ResultSpread = WinOrLoseSpread(gameStats.score_away, gameStats.score_home, gameStats.lp4SpreadPick, gameStats.lp4SpreadCond)\r\n            gameStats.lp4ResultTotal = WinOrLoseTotal(gameStats.score_away, gameStats.score_home, gameStats.lp4TotalPick, gameStats.total)\r\n\r\n            gameStats.llp4ResultSpread = WinOrLoseSpread(gameStats.score_away, gameStats.score_home, gameStats.llp4SpreadPick, gameStats.llp4SpreadCond)\r\n            gameStats.llp4ResultTotal = WinOrLoseTotal(gameStats.score_away, gameStats.score_home, gameStats.llp4TotalPick, gameStats.total)\r\n\r\n            gameStats.lg1ResultSpread = WinOrLoseSpread(gameStats.score_away, gameStats.score_home, gameStats.lg1SpreadPick, gameStats.lg1SpreadCond)\r\n            gameStats.lg1ResultTotal = WinOrLoseTotal(gameStats.score_away, gameStats.score_home, gameStats.lg1TotalPick, gameStats.total)\r\n            \r\n            data[date].push(gameStats)\r\n        })\r\n    })\r\n    console.log(data)\r\n    return data\r\n}","import { projected } from '../Functions/projected';\r\n\r\nexport function SeasonProj(date, awayTeam, homeTeam, stats) {\r\n    const seasonStats = stats.Season[date]\r\n    const leagueAve = stats.SeasonLeagueAvg[date]\r\n    const away = seasonStats[awayTeam]\r\n    const home = seasonStats[homeTeam]\r\n\r\n    return projected(away, home, leagueAve)\r\n}\r\n","import { projected } from '../Functions/projected';\r\n\r\nexport function SeasonLocProj(date, awayTeam, homeTeam, stats) {\r\n    const seasonAway = stats.SeasonAway[date]\r\n    const seasonHome = stats.SeasonHome[date]\r\n    const leagueAve = stats.SeasonLeagueAvg[date]\r\n    const leagAveAway = stats.SeasonLeagueAveAway[date]\r\n    const leagAveHome = stats.SeasonLeagueAveHome[date]\r\n    const away = seasonAway[awayTeam]\r\n    const home = seasonHome[homeTeam]\r\n    \r\n    return projected(away, home, leagueAve, leagAveAway, leagAveHome)\r\n}\r\n","import { projected } from '../Functions/projected';\r\n\r\nexport function Last10Proj(date, awayTeam, homeTeam, stats) {\r\n    const last10Stats = stats.Last10[date]\r\n    const leagueAve = stats.SeasonLeagueAvg[date]\r\n    const away = last10Stats[awayTeam]\r\n    const home = last10Stats[homeTeam]\r\n    \r\n    return projected(away, home, leagueAve)\r\n}\r\n","import { projected } from '../Functions/projected';\r\n\r\nexport function Last10LocProj(date, awayTeam, homeTeam, stats) {\r\n    const last10Away = stats.Last10Away[date]\r\n    const last10Home = stats.Last10Home[date]\r\n    const leagueAve = stats.SeasonLeagueAvg[date]\r\n    const leagAveAway = stats.SeasonLeagueAveAway[date]\r\n    const leagAveHome = stats.SeasonLeagueAveHome[date]\r\n    const away = last10Away[awayTeam]\r\n    const home = last10Home[homeTeam]\r\n    \r\n    return projected(away, home, leagueAve, leagAveAway, leagAveHome)\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst TitleBanner = () => {\r\n    return (\r\n        <div className='banner'>\r\n            <Link to='/'>\r\n                <button type=\"button\" class=\"btn btn-outline-dark home\">Home</button>\r\n            </Link>\r\n            <h1>NBA Sports Betting Analysis: 2020/2021 Season</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleBanner","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\n\r\nconst Home = () => {\r\n    const {results} = useContext(ResultsContext)\r\n\r\n    return (\r\n        <div>\r\n        {Object.keys(results).length === 0 ? \r\n            <button id='loading' class=\"btn btn-primary\" type=\"button\" disabled>\r\n                <span class=\"spinner-border\" role=\"status\" aria-hidden=\"true\"></span>\r\n                Loading...\r\n            </button>\r\n            :\r\n            null\r\n        }\r\n            <div className='homeCont'>\r\n                <div class=\"card text-white bg-secondary mb-3\">\r\n                    <h3 class=\"card-header\">Handicapping Method</h3>\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text\">\r\n                            In this method, NBA team stats were used to calculate expected game scores. \r\n                            Subtracting the two scores provided the projected spread, while adding the \r\n                            two scores provided the projected total. In the simulation, a bet was made \r\n                            if the projected result was off the vegas line by four points or more. Several \r\n                            different sets of data were used and compared to each other.\r\n                        </p>\r\n                        <Link className='link-hp' to='/results'>\r\n                            <button class=\"btn btn-primary\">See Sumary</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card text-white bg-secondary mb-3\">\r\n                    <h3 class=\"card-header\">Line Movement Method</h3>\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text\">\r\n                            In this method, the Vegas lines for spread and totals were compared to their opening lines. \r\n                            If a line moved by 1 point or more, then a bet would be made on the side with the improved odds. \r\n                        </p>\r\n                        <Link className='link-hp' to='/results-lineGrinding'>\r\n                            <button class=\"btn btn-primary\">See Sumary</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card text-white bg-secondary mb-3\">\r\n                    <h3 class=\"card-header\">Vegas Predictions</h3>\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text\">\r\n                            Here, the scores of games were predicted from Vegas's lines. A formula was used to find the scores \r\n                            that would match the spreads and totals for each game. These Vegas predictions were then compared \r\n                            to actual game results.\r\n                        </p>\r\n                        <Link className='link-hp' to='/results-vegas'>\r\n                            <button class=\"btn btn-primary\">See Sumary</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useContext } from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport { totalCount } from './totalPoints';\r\n\r\nexport function ResultCount(name, resultsSpread, resultsTotal, dataType, pickDiff) {\r\n    const {results} = useContext(ResultsContext)\r\n    let resultKeys = Object.keys(results)\r\n    let totalGames = 0\r\n    let spreadWon = 0\r\n    let spreadTotal = 0\r\n    let totalWon = 0\r\n    let totalTotal = 0\r\n    let totalOverWon = 0\r\n    let totalUnderWon = 0\r\n    let totalOver = 0\r\n    let totalUnder = 0\r\n\r\n    resultKeys.map(date => {\r\n        results[date].map(game => {\r\n            totalGames++\r\n\r\n            if (game[resultsSpread] === 'Win') {\r\n                spreadWon++\r\n                spreadTotal++\r\n            } else if (game[resultsSpread] === 'Lose') {\r\n                spreadTotal++\r\n            }\r\n            \r\n            if (game[resultsTotal] === 'Win') {\r\n                totalWon++\r\n                totalTotal++\r\n            } else if (game[resultsTotal] === 'Lose') {\r\n                totalTotal++\r\n            }\r\n\r\n            if (game[dataType+pickDiff+'TotalPick'] === 'Over' && game[resultsTotal] === 'Win') {\r\n                totalOverWon++\r\n                totalOver++\r\n            } else if (game[dataType+pickDiff+'TotalPick'] === 'Over' && game[resultsTotal] === 'Lose') {\r\n                totalOver++\r\n            }\r\n            \r\n            if (game[dataType+pickDiff+'TotalPick'] === 'Under' && game[resultsTotal] === 'Win') {\r\n                totalUnderWon++\r\n                totalUnder++\r\n            } else if (game[dataType+pickDiff+'TotalPick'] === 'Under' && game[resultsTotal] === 'Lose') {\r\n                totalUnder++\r\n            }\r\n        })\r\n    })\r\n\r\n    let totals = totalCount(dataType, results)\r\n\r\n    return({\r\n        name: name,\r\n        totalGames: totalGames,\r\n        spreadWon: spreadWon, \r\n        spreadTotal: spreadTotal,\r\n        totalWon: totalWon,\r\n        totalTotal: totalTotal,\r\n        totalOverWon: totalOverWon,\r\n        totalOver: totalOver,\r\n        totalUnderWon: totalUnderWon,\r\n        totalUnder: totalUnder,\r\n        pointsAwayAvg: totals.pointsAwayAvg,\r\n        pointsHomeAvg: totals.pointsHomeAvg,\r\n        pointsAvg: totals.pointsAvg,\r\n        projPointsAwayAvg: totals.projPointsAwayAvg,\r\n        projPointsHomeAvg: totals.projPointsHomeAvg,\r\n        projPointsAvg: totals.projPointsAvg,\r\n        dataType: dataType,\r\n        pickDiff: pickDiff\r\n    })\r\n}","export function totalCount(dataType, resultsData) {\r\n    let resultKeys = Object.keys(resultsData)\r\n    let pointsAway = []\r\n    let pointsHome = []\r\n    let projPointsAway = []\r\n    let projPointsHome = []\r\n\r\n    resultKeys.map(date => {\r\n        resultsData[date].map(game => {\r\n            if (game.score_away === 'Cancelled') {\r\n                let nothing = 0\r\n            } else {\r\n                pointsAway.push(game.score_away)\r\n                pointsHome.push(game.score_home)\r\n                projPointsAway.push(game[dataType+'ScoreAway'])\r\n                projPointsHome.push(game[dataType+'ScoreHome'])\r\n            }        \r\n        })\r\n    })\r\n    \r\n    // points = points.filter((item) => item !== 'Cancelled')\r\n    function reducer(total, num) {\r\n        return total + num\r\n    }\r\n\r\n    let pointsAwayTotal = pointsAway.reduce(reducer)\r\n    let pointsHomeTotal = pointsHome.reduce(reducer)\r\n    let pointsTotal = pointsAwayTotal + pointsHomeTotal\r\n    let pointsAwayAvg = pointsAwayTotal / pointsAway.length\r\n    let pointsHomeAvg = pointsHomeTotal / pointsHome.length  \r\n    let pointsAvg = pointsTotal / pointsAway.length\r\n    \r\n    let projPointsAwayTotal = projPointsAway.reduce(reducer)\r\n    let projPointsHomeTotal = projPointsHome.reduce(reducer)\r\n    let projPointsTotal = projPointsAwayTotal + projPointsHomeTotal\r\n    let projPointsAwayAvg = projPointsAwayTotal / projPointsAway.length\r\n    let projPointsHomeAvg = projPointsHomeTotal / projPointsHome.length\r\n    let projPointsAvg = projPointsTotal / projPointsAway.length\r\n    \r\n\r\n    return({\r\n        pointsAwayAvg: pointsAwayAvg.toFixed(1),\r\n        pointsHomeAvg: pointsHomeAvg.toFixed(1),\r\n        pointsAvg: pointsAvg.toFixed(1),\r\n        projPointsAwayAvg: projPointsAwayAvg.toFixed(1),\r\n        projPointsHomeAvg: projPointsHomeAvg.toFixed(1),\r\n        projPointsAvg: projPointsAvg.toFixed(1)\r\n    })\r\n}","import { useContext } from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\n\r\nexport function ResultCount2(name, resultsSpread1, resultsSpread2, resultsTotal1, resultsTotal2) {\r\n    const {results} = useContext(ResultsContext)\r\n    let resultsKeys = Object.keys(results)\r\n    let spreadWon = 0\r\n    let spreadTotal = 0\r\n    let totalWon = 0\r\n    let totalTotal = 0\r\n\r\n    resultsKeys.map(date => {\r\n        results[date].map(game => {\r\n            if (game[resultsSpread1] === 'Win' && game[resultsSpread2] === 'Win') {\r\n                spreadWon++\r\n                spreadTotal++\r\n            } else if (game[resultsSpread1] === 'Lose' && game[resultsSpread2] === 'Lose') {\r\n                spreadTotal++\r\n            }\r\n            \r\n            if (game[resultsTotal1] === 'Win' && game[resultsTotal2] === 'Win') {\r\n                totalWon++\r\n                totalTotal++\r\n            } else if (game[resultsTotal1] === 'Lose' && game[resultsTotal2] === 'Lose') {\r\n                totalTotal++\r\n            }\r\n        })\r\n    })\r\n\r\n    return({\r\n        name: name,\r\n        spreadWon: spreadWon, \r\n        spreadTotal: spreadTotal,\r\n        totalWon: totalWon,\r\n        totalTotal: totalTotal\r\n    })\r\n}","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport { ResultCount } from '../Functions/resultCount';\r\nimport { ResultCount2 } from '../Functions/resultCount2';\r\n\r\nconst Results = () => {\r\n    const {inputResults} = useContext(ResultsContext)\r\n    let count = []\r\n    let count2 = []\r\n\r\n    count.push(ResultCount('Season Team Stats', 'sp4ResultSpread', 'sp4ResultTotal', 'sp', '4'))\r\n    count.push(ResultCount('Season Home/Away Team Stats', 'slp4ResultSpread', 'slp4ResultTotal', 'slp', '4'))\r\n    count.push(ResultCount('Last Ten Games Team Stats', 'lp4ResultSpread', 'lp4ResultTotal', 'lp', '4'))\r\n    count.push(ResultCount('Last Ten Games Home/Away Team Stats', 'llp4ResultSpread', 'llp4ResultTotal', 'llp', '4'))\r\n    count2.push(ResultCount2('Season Stats and Last Ten Stats Agree', 'sp4ResultSpread', 'lp4ResultSpread', 'sp4ResultTotal', 'lp4ResultTotal'))\r\n    count2.push(ResultCount2('Season Home/Away Stats and Last Ten Home/Away Stats Agree', 'slp4ResultSpread', 'llp4ResultSpread', 'slp4ResultTotal', 'llp4ResultTotal'))\r\n    count2.push(ResultCount2('Season and Season Home/Away Agree', 'sp4ResultSpread', 'slp4ResultSpread', 'sp4ResultTotal', 'slp4ResultTotal'))\r\n    count2.push(ResultCount2('Last Ten Stats and Last Ten Home/Away Stats Agree', 'lp4ResultSpread', 'llp4ResultSpread', 'lp4ResultTotal', 'llp4ResultTotal'))\r\n\r\n    return (\r\n        <div class='resultsPage'>\r\n            <div className='header'>\r\n                <h2>Handicapping Method Summary</h2>\r\n                <p>Total games examined: {count[0].totalGames}</p>\r\n                <Link to='/results-compare'>\r\n                    <button class='btn btn-primary'>See Side-by-Side Scores Comparison</button>\r\n                </Link>\r\n            </div>\r\n            <div className='resultsCont'>\r\n                {count.map(results => (\r\n                    <div class=\"card text-white bg-secondary mb-3 hcSummary\">\r\n                        <h5 class=\"card-header\">{results.name}</h5>\r\n                        <div>\r\n                            <p class='hcP'>Spread Results: {results.spreadWon}/{results.spreadTotal} ({(results.spreadWon/results.spreadTotal*100).toFixed(1)}%)</p>\r\n                            <p>Total Results: {results.totalWon}/{results.totalTotal}  ({(results.totalWon/results.totalTotal*100).toFixed(1)}%)</p>\r\n                            {/* <p>Total Over Results: {results.totalOverWon}/{results.totalOver} ({(results.totalOverWon/results.totalOver*100).toFixed(1)}%)</p>\r\n                            <p>Total Under Results: {results.totalUnderWon}/{results.totalUnder} ({(results.totalUnderWon/results.totalUnder*100).toFixed(1)}%)</p>\r\n                            <p>Actual Avg Totals: Away({results.pointsAwayAvg}), Home({results.pointsHomeAvg}), Combined({results.pointsAvg})</p>\r\n                            <p>Projected Avg Totals: Away({results.projPointsAwayAvg}), Home({results.projPointsHomeAvg}), Combined ({results.projPointsAvg})</p> */}\r\n                            <Link className='link' onClick={() => inputResults(results)} to='/results-details'>\r\n                                <button class=\"btn btn-primary\">\r\n                                    See Detailed Results\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div class='divider'/>\r\n            <div className='resultsCont'>\r\n                {count2.map(results => (\r\n                    <div class=\"card text-white bg-secondary mb-3 hcSummary\">\r\n                        <h5 class=\"card-header\">{results.name}</h5>\r\n                        <p class='hcP'>Spread Results: {results.spreadWon}/{results.spreadTotal} ({(results.spreadWon/results.spreadTotal*100).toFixed(1)}%)</p>\r\n                        <p>Total Results: {results.totalWon}/{results.totalTotal}  ({(results.totalWon/results.totalTotal*100).toFixed(1)}%)</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\n\r\nconst ResultsDetailsDate = (props) => {\r\n    const {selected} = useContext(ResultsContext)\r\n    let dateArray = props.dateArray\r\n\r\n    return (\r\n        dateArray.map(game => (\r\n            <table class=\"table table-bordered table-secondary\">\r\n                <Link to='/results'>\r\n                    <button type=\"button\" class=\"btn btn-outline-dark back\">Back</button>\r\n                </Link>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Teams</th>\r\n                        <th scope=\"col\">{selected.name} Projected</th>\r\n                        <th scope=\"col\">Vegas Points</th>\r\n                        <th scope=\"col\">Vegas Lines</th>\r\n                        <th scope='col'>Pick</th>\r\n                        <th scope='col'>Actual</th>\r\n                        <th scope='col'>Results</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{game.team_away}</td>\r\n                        <td>{game[selected.dataType+'ScoreAway']}({game[selected.dataType+'SpreadAway']})</td>\r\n                        <td>{(game.total - game.spread_away) / 2}</td>\r\n                        <td>{game.spread_away}</td>\r\n                        <td>{game[selected.dataType+selected.pickDiff+'SpreadPick']}</td>\r\n                        <td>{game.score_away}({game.score_home-game.score_away})</td>\r\n                        <td class={game[selected.dataType+selected.pickDiff+'ResultSpread']}>{game[selected.dataType+selected.pickDiff+'ResultSpread']}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{game.team_home}</td>\r\n                        <td>{game[selected.dataType+'ScoreHome']}({game[selected.dataType+'SpreadHome']})</td>\r\n                        <td>{(game.total - game.spread_home) / 2}</td>\r\n                        <td>{game.spread_home}</td>\r\n                        <td></td>\r\n                        <td>{game.score_home}({game.score_away-game.score_home})</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{game[selected.dataType+'Total']}</td>\r\n                        <td></td>\r\n                        <td>{game.total}</td>\r\n                        <td>{game[selected.dataType+selected.pickDiff+'TotalPick']}</td>\r\n                        <td>{game.score_home+game.score_away}</td>\r\n                        <td class={game[selected.dataType+selected.pickDiff+'ResultTotal']}>{game[selected.dataType+selected.pickDiff+'ResultTotal']}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default ResultsDetailsDate","import React, {useState} from 'react';\r\n  \r\nconst ScrollButton = () =>{ \r\n  const [position, setPosition] = useState(false)\r\n\r\n  window.addEventListener(\"scroll\", onScroll)\r\n\r\n  function onScroll() {\r\n      if (window.scrollY > 300) {\r\n          setPosition(true)\r\n      } else if (window.scrollY < 300) {\r\n          setPosition(false)\r\n      }\r\n  }    \r\n\r\n  function scrollToTop() {window.scrollTo({top: 0, behavior: 'smooth'})}\r\n    \r\n  return (\r\n    position === true ? \r\n    <button class='topButton' onClick={scrollToTop}>\r\n      &#10142;\r\n    </button>\r\n    :\r\n    null       \r\n  );\r\n}\r\n  \r\nexport default ScrollButton;","import React, {useContext} from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport ResultsDetailsDate from './resultsDetailsDate';\r\nimport ScrollButton from './scrollButton';\r\n\r\nconst ResultsDetails = () => {\r\n    const {results} = useContext(ResultsContext)\r\n    const resultsKeys = Object.keys(results)\r\n    \r\n    return (\r\n        <div>\r\n            <h2 class='header'>Projected Results by Game</h2>\r\n            {resultsKeys.map(date => (\r\n                <div class='detailsCont'>\r\n                    <h5 class='date'>{date}</h5>\r\n                    <ResultsDetailsDate dateArray={results[date]}/>\r\n                </div>\r\n            ))}\r\n            <ScrollButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsDetails","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { ActualResults } from '../Functions/actualResults';\r\n\r\nconst ResultsVegas = () => {\r\n    const results = ActualResults()\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h2>Vegas Line Summary</h2>\r\n            </div>\r\n            <div className='resultsCont'>\r\n                <div class=\"card text-white bg-secondary mb-3 hcSummary\">\r\n                    <h5 class=\"card-header\">Vegas Opening and Closing Lines</h5>\r\n                    <div>\r\n                        <p class='hcP'>Actual Points per Game: {results.pointsAvg}</p>\r\n                        <p>Games the Favorite Won: {results.favWins}/{results.favWins + results.dogWins} ({(results.favWins / (results.favWins + results.dogWins) * 100).toFixed(1)}%)</p>\r\n                        <p>Games the Dog Won: {results.dogWins}/{results.favWins + results.dogWins} ({(results.dogWins / (results.favWins + results.dogWins) * 100).toFixed(1)}%)</p>\r\n                    </div>\r\n                    <table class=\"table table-bordered table-secondary vegasTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th scope=\"col\">Opening Lines</th>\r\n                                <th scope=\"col\">Closing Lines</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Average Points Per Game</td>\r\n                                <td>{results.openVegasPointsAve}</td>\r\n                                <td>{results.vegasPointsAve}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Games Over</td>\r\n                                <td>{results.openOverWins}/{results.openOverWins + results.openUnderWins} ({(results.openOverWins / (results.openOverWins + results.openUnderWins) * 100).toFixed(1)}%)</td>\r\n                                <td>{results.overWins}/{results.overWins + results.underWins} ({(results.overWins / (results.overWins + results.underWins) * 100).toFixed(1)}%)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Games Under</td>\r\n                                <td>{results.openUnderWins}/{results.openOverWins + results.openUnderWins} ({(results.openUnderWins / (results.openOverWins + results.openUnderWins) * 100).toFixed(1)}%)</td>\r\n                                <td>{results.underWins}/{results.overWins + results.underWins} ({(results.underWins / (results.overWins + results.underWins) * 100).toFixed(1)}%)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Favorite Covers</td>\r\n                                <td>{results.openFavCovers}/{results.openFavCovers + results.openDogCovers} ({(results.openFavCovers / (results.openFavCovers + results.openDogCovers) * 100).toFixed(1)}%)</td>\r\n                                <td>{results.favCovers}/{results.favCovers + results.dogCovers} ({(results.favCovers / (results.favCovers + results.dogCovers) * 100).toFixed(1)}%)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dog Covers</td>\r\n                                <td>{results.openDogCovers}/{results.openFavCovers + results.openDogCovers} ({(results.openDogCovers / (results.openFavCovers + results.openDogCovers) * 100).toFixed(1)}%)</td>\r\n                                <td>{results.dogCovers}/{results.favCovers + results.dogCovers} ({(results.dogCovers / (results.favCovers + results.dogCovers) * 100).toFixed(1)}%)</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <Link to='vegas-details'>\r\n                        <button class=\"btn btn-primary\">\r\n                            Details\r\n                        </button>\r\n                    </Link>\r\n                    <div class=\"card-footer\">\r\n                        <small class=\"text-white\">\r\n                            There are a few reasons as to why the total number of games do not match. \r\n                            The first reason is that some games are missing opening or closing lines in the database. \r\n                            Another reason is that games that are a push are not counted. \r\n                            A push occurs when the Vegas spread and the actual spread are the same. \r\n                            (Vegas line is home team by 8 and they actually win by exactly eight.) \r\n                            When this occurs, there is now winner, so the betters get their money back.\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsVegas","import { useContext } from \"react\";\r\nimport { ResultsContext } from \"../Context/ResultsContext\";\r\n\r\nexport function ActualResults() {\r\n    const {results} = useContext(ResultsContext)\r\n    let resultKeys = Object.keys(results)\r\n    let pointsAway = [], pointsHome = [], vegasPoints = [], openVegasPoints = []\r\n    let overWins = 0, underWins = 0, openOverWins = 0, openUnderWins = 0\r\n    let dogCovers = 0, favCovers = 0, openDogCovers = 0, openFavCovers = 0\r\n    let dogWins = 0, favWins = 0\r\n\r\n    resultKeys.map(date => {\r\n        results[date].map(game => {\r\n            if (game.score_home - game.score_away < Number(game.spread_away) && Number(game.spread_away) > 0) {\r\n                dogCovers++\r\n            } else if (game.score_home - game.score_away < Number(game.spread_away) && Number(game.spread_away) < 0) {\r\n                favCovers++\r\n            } else if (game.score_home - game.score_away > Number(game.spread_away) && Number(game.spread_away) > 0) {\r\n                favCovers++\r\n            } else if (game.score_home - game.score_away > Number(game.spread_away) && Number(game.spread_away) < 0) {\r\n                dogCovers++\r\n            }\r\n\r\n            if (game.score_home - game.score_away < Number(game.spread_open_away) && Number(game.spread_open_away) > 0) {\r\n                openDogCovers++\r\n            } else if (game.score_home - game.score_away < Number(game.spread_open_away) && Number(game.spread_open_away) < 0) {\r\n                openFavCovers++\r\n            } else if (game.score_home - game.score_away > Number(game.spread_open_away) && Number(game.spread_open_away) > 0) {\r\n                openFavCovers++\r\n            } else if (game.score_home - game.score_away > Number(game.spread_open_away) && Number(game.spread_open_away) < 0) {\r\n                openDogCovers++\r\n            }\r\n\r\n            if (game.score_home + game.score_away < game.total) {\r\n                underWins++\r\n            } else if (game.score_home + game.score_away > game.total) {\r\n                overWins++\r\n            }\r\n\r\n            if (game.score_home + game.score_away < game.total_open) {\r\n                openUnderWins++\r\n            } else if (game.score_home + game.score_away > game.total_open) {\r\n                openOverWins++\r\n            }\r\n\r\n            if (game.score_away > game.score_home && game.spread_away < 0) {\r\n                favWins++\r\n            } else if (game.score_away < game.score_home && game.spread_home < 0) {\r\n                favWins++\r\n            } else if (game.score_away > game.score_home && game.spread_away > 0) {\r\n                dogWins++\r\n            } else if (game.score_away < game.score_home && game.spread_home > 0) {\r\n                dogWins++\r\n            }\r\n\r\n            if (game.score_away !== 'Cancelled') {\r\n                vegasPoints.push(Number(game.total))\r\n                openVegasPoints.push(Number(game.total_open))\r\n                pointsAway.push(game.score_away)\r\n                pointsHome.push(game.score_home)\r\n            }\r\n        })\r\n    })\r\n\r\n    function reducer(total, num) {\r\n        return total + num\r\n    }\r\n\r\n    let pointsAwayTotal = pointsAway.reduce(reducer)\r\n    let pointsHomeTotal = pointsHome.reduce(reducer)\r\n    let pointsTotal = pointsAwayTotal + pointsHomeTotal\r\n    let pointsAvg = pointsTotal / pointsAway.length\r\n    let vegasPointsSum = vegasPoints.reduce(reducer)\r\n    let vegasPointsAve = vegasPointsSum / vegasPoints.length\r\n    let openVegasPointsSum = openVegasPoints.reduce(reducer)\r\n    let openVegasPointsAve = openVegasPointsSum / openVegasPoints.length\r\n\r\n    let data = {\r\n        'overWins': overWins,\r\n        'underWins': underWins,\r\n        'dogWins': dogWins,\r\n        'favWins': favWins,\r\n        'dogCovers': dogCovers,\r\n        'favCovers': favCovers,\r\n        'openOverWins': openOverWins,\r\n        'openUnderWins': openUnderWins,\r\n        'openDogCovers': openDogCovers,\r\n        'openFavCovers': openFavCovers,\r\n        'pointsAvg': pointsAvg.toFixed(1),\r\n        'vegasPointsAve': vegasPointsAve.toFixed(1),\r\n        'openVegasPointsAve': openVegasPointsAve.toFixed(1)\r\n    }\r\n    \r\n    return data\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst VegasDetailsDate = (props) => {\r\n    let dateArray = props.dateArray\r\n    \r\n    return (\r\n        dateArray.map(game => (\r\n            <table class=\"table table-bordered table-secondary\">\r\n                <Link to='/results-vegas'>\r\n                    <button type=\"button\" class=\"btn btn-outline-dark back\">Back</button>\r\n                </Link>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Teams</th>\r\n                        <th scope=\"col\">Opening Lines</th>\r\n                        <th scope=\"col\">Closing Lines</th>\r\n                        <th scope=\"col\">Opening Vegas Points</th>\r\n                        <th scope=\"col\">Closing Vegas Points</th>\r\n                        <th scope='col'>Actual</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{game.team_away}</td>\r\n                        <td>{game.spread_open_away}</td>\r\n                        <td>{game.spread_away}</td>\r\n                        {\r\n                            !game.total_open || !game.spread_open_away ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total_open - game.spread_open_away) / 2}</td>\r\n                        }\r\n                        {\r\n                            !game.total|| !game.spread_away ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total - game.spread_away) / 2}</td>\r\n                        }\r\n                        <td>{game.score_away} ({game.score_home-game.score_away})</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{game.team_home}</td>\r\n                        <td>{game.spread_open_home}</td>\r\n                        <td>{game.spread_home}</td>\r\n                        {\r\n                            !game.total_open || !game.spread_open_home ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total_open - game.spread_open_home) / 2}</td>\r\n                        }\r\n                        {\r\n                            !game.total|| !game.spread_home ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total - game.spread_home) / 2}</td>\r\n                        }\r\n                        <td>{game.score_home} ({game.score_away-game.score_home})</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{game.total_open}</td>\r\n                        <td>{game.total}</td>\r\n                        <td></td> \r\n                        <td></td>\r\n                        <td>{game.score_home+game.score_away}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default VegasDetailsDate","import React, {useContext} from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport VegasDetailsDate from './vegasDetailsDate'\r\nimport ScrollButton from './scrollButton';\r\n\r\nconst VegasDetails = () => {\r\n    const {results} = useContext(ResultsContext)\r\n    const resultsKeys = Object.keys(results)\r\n\r\n    return (\r\n        <div>\r\n            <h2 class='header'>Vegas Results by Game</h2>\r\n            {resultsKeys.map(date => (\r\n                <div class='detailsCont'>\r\n                    <h5 class='date'>{date}</h5>\r\n                    <VegasDetailsDate dateArray={results[date]}/>\r\n                </div>\r\n            ))}\r\n            <ScrollButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VegasDetails","import React, { useContext } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { ResultsContext } from \"../Context/ResultsContext\";\r\nimport { ResultCount } from \"../Functions/resultCount\";\r\n\r\nconst ResultsLineGrinding = () => {\r\n    const {inputResults} = useContext(ResultsContext)\r\n    let count = []\r\n\r\n    count.push(ResultCount('Line Movement', 'lg1ResultSpread', 'lg1ResultTotal', 'lg', '1'))\r\n    \r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h2>Line Movement Summary</h2>\r\n                <p>Total games examined: {count[0].totalGames}</p>\r\n            </div>\r\n            <div className='resultsCont'>\r\n                {count.map(results => (\r\n                    <div class=\"card text-white bg-secondary mb-3 hcSummary\">\r\n                        <h5 class=\"card-header\">{results.name}</h5>\r\n                        <div>\r\n                            <p class='hcP'>Spread Results: {results.spreadWon}/{results.spreadTotal} ({(results.spreadWon/results.spreadTotal*100).toFixed(1)}%)</p>\r\n                            <p>Total Results: {results.totalWon}/{results.totalTotal}  ({(results.totalWon/results.totalTotal*100).toFixed(1)}%)</p>\r\n                        </div>\r\n                        <Link className='link' onClick={() => inputResults(results)} to='/lineGrinding-details'>\r\n                            <button class=\"btn btn-primary\">\r\n                                See Detailed Results\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsLineGrinding","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\n\r\nconst LineGrindingDetailsDate = (props) => {\r\n    const {selected} = useContext(ResultsContext)\r\n    let dateArray = props.dateArray\r\n\r\n    return (\r\n        dateArray.map(game => (\r\n            <table class=\"table table-bordered table-secondary\">\r\n                <Link to='/results-lineGrinding'>\r\n                    <button type=\"button\" class=\"btn btn-outline-dark back\">Back</button>\r\n                </Link>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Teams</th>\r\n                        <th scope=\"col\">Opening Lines</th>\r\n                        <th scope=\"col\">Closing Lines</th>\r\n                        <th scope='col'>Pick</th>\r\n                        <th scope=\"col\">Opening Vegas Points</th>\r\n                        <th scope='col'>Actual</th>\r\n                        <th scope='col'>Results</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{game.team_away}</td>\r\n                        <td>{game.spread_open_away}</td>\r\n                        <td>{game.spread_away}</td>\r\n                        <td>{game[selected.dataType+selected.pickDiff+'SpreadPick']}</td>\r\n                        {!game.total_open || !game.spread_open_away ? \r\n                        <td>-</td> :\r\n                        <td>{(game.total_open - game.spread_open_away) / 2}</td>\r\n                        }\r\n                        <td>{game.score_away}({game.score_home-game.score_away})</td>\r\n                        <td class={game[selected.dataType+selected.pickDiff+'ResultSpread']}>{game[selected.dataType+selected.pickDiff+'ResultSpread']}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{game.team_home}</td>\r\n                        <td>{game.spread_open_home}</td>\r\n                        <td>{game.spread_home}</td>\r\n                        <td></td>\r\n                        {!game.total_open || !game.spread_open_away ? \r\n                        <td>-</td> :\r\n                        <td>{(game.total_open - game.spread_open_home) / 2}</td>\r\n                        }\r\n                        <td>{game.score_home}({game.score_away-game.score_home})</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{game.total_open}</td>\r\n                        <td>{game.total}</td>\r\n                        <td>{game[selected.dataType+selected.pickDiff+'TotalPick']}</td>\r\n                        <td></td>\r\n                        <td>{game.score_home+game.score_away}</td>\r\n                        <td class={game[selected.dataType+selected.pickDiff+'ResultTotal']}>{game[selected.dataType+selected.pickDiff+'ResultTotal']}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default LineGrindingDetailsDate","import React, {useContext} from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport LineGrindingDetailsDate from './lineGrindingDetailsDate';\r\nimport ScrollButton from './scrollButton';\r\n\r\nconst LineGrindingDetails = () => {\r\n    const {results} = useContext(ResultsContext)\r\n    const resultsKeys = Object.keys(results)\r\n\r\n    return (\r\n        <div>\r\n            <h2 class='header'>Line Movement by Game</h2>\r\n            {resultsKeys.map(date => (\r\n                <div class='detailsCont'>\r\n                    <h5 class='date'>{date}</h5>\r\n                    <LineGrindingDetailsDate dateArray={results[date]}/>\r\n                </div>\r\n            ))}\r\n            <ScrollButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGrindingDetails","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CompareDetailsDate = (props) => {\r\n    let dateArray = props.dateArray\r\n\r\n    return (\r\n        dateArray.map(game => (\r\n            <table class=\"table table-hover table-bordered table-secondary\">\r\n                <Link to='/results'>\r\n                    <button type=\"button\" class=\"btn btn-outline-dark back\">Back</button>\r\n                </Link>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Teams</th>\r\n                        <th scope=\"col\">Vegas Opening</th>\r\n                        <th scope=\"col\">Vegas Closing</th>\r\n                        <th scope=\"col\">Season Projected</th>\r\n                        <th scope='col'>Home/Away <br/> Season Projected</th>\r\n                        <th scope='col'>Last Ten Games Projected</th>\r\n                        <th scope='col'>Home/Away <br/> Last Ten Projected</th>\r\n                        <th scope='col'>Actual</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{game.team_away}</td>\r\n                        {game.spread_open_away === '' ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total_open - game.spread_open_away) / 2}</td>\r\n                        }  \r\n                        <td>{(game.total - game.spread_away) / 2}</td>\r\n                        <td>{game.spScoreAway}</td>\r\n                        <td>{game.slpScoreAway}</td>\r\n                        <td>{game.lpScoreAway}</td>\r\n                        <td>{game.llpScoreAway}</td>\r\n                        <td>{game.score_away}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{game.team_home}</td>\r\n                        {game.spread_open_away === '' ? \r\n                            <td>-</td> :\r\n                            <td>{(game.total_open - game.spread_open_home) / 2}</td>\r\n                        }  \r\n                        <td>{(game.total - game.spread_home) / 2}</td>\r\n                        <td>{game.spScoreHome}</td>\r\n                        <td>{game.slpScoreHome}</td>\r\n                        <td>{game.lpScoreHome}</td>\r\n                        <td>{game.llpScoreHome}</td>\r\n                        <td>{game.score_home}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default CompareDetailsDate","import React, {useContext} from 'react';\r\nimport { ResultsContext } from '../Context/ResultsContext';\r\nimport CompareDetailsDate from './compareDetailsDate';\r\nimport ScrollButton from './scrollButton';\r\n\r\nconst CompareDetails = () => {\r\n    const {results} = useContext(ResultsContext)\r\n    const resultsKeys = Object.keys(results)\r\n\r\n    return (\r\n        <div>\r\n            <h2 class='header'>Side by Side Points by Game</h2>\r\n            {resultsKeys.map(date => (\r\n                <div class='detailsCont'>\r\n                    <h5 class='date'>{date}</h5>\r\n                    <CompareDetailsDate dateArray={results[date]}/>\r\n                </div>\r\n            ))}\r\n            <ScrollButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompareDetails","import React, { useEffect, useState } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { StatsContext } from './Context/StatsContext';\r\nimport { ResultsContext } from './Context/ResultsContext';\r\nimport { ResultsData } from './Functions/resultsData';\r\nimport './App.css';\r\nimport TitleBanner from './Components/titleBanner';\r\nimport Home from './Components/home';\r\nimport Results from './Components/results';\r\nimport ResultsDetails from './Components/resultDetails';\r\nimport ResultsVegas from './Components/resultsVegas';\r\nimport VegasDetails from './Components/vegasDetails';\r\nimport ResultsLineGrinding from './Components/resultsLineGrinding';\r\nimport LineGrindingDetails from './Components/lineGrindingDetails';\r\nimport CompareDetails from './Components/compareDetails';\r\n\r\nfunction App() {\r\n  const [stats, setStats] = useState({});\r\n  const [results, setResults] = useState({});\r\n  const [selected, setSelected] = useState({})\r\n\r\n  useEffect(() => {   \r\n    async function fetchData(address) {\r\n      let result = axios\r\n          .get(address)\r\n          .then(res => res.data)\r\n          .catch(err => console.log(err))  \r\n      return result\r\n    }\r\n    \r\n    async function fetchAllData() {\r\n      let obj = {}\r\n\r\n      obj['Odds'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-odds-all')      \r\n      obj['Season'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season/all')\r\n      obj['SeasonAway'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season-location/all?location=away', 'SeasonAway')\r\n      obj['SeasonHome'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season-location/all?location=home', 'SeasonHome')\r\n      obj['Last10'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-last10/all', 'Last10')\r\n      obj['Last10Away'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-last10-location/all?location=away', 'Last10Away')\r\n      obj['Last10Home'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-last10-location/all?location=home', 'Last10Home')\r\n      obj['SeasonLeagueAvg'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season-league-avg', 'SeasonLeagueAvg')\r\n      obj['SeasonLeagueAveAway'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season-league-avg-location?location=away', 'SeasonLeagueAveAway')\r\n      obj['SeasonLeagueAveHome'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-season-league-avg-location?location=home', 'SeasonLeagueAveHome')\r\n      obj['Scores'] = await fetchData('https://arw-nba-backend.herokuapp.com/api/nba-scores-all', 'Scores')\r\n\r\n      return obj\r\n    }\r\n\r\n    function updateStats(data) {\r\n      setStats(data)\r\n    }\r\n    \r\n    fetchAllData().then(res => updateStats(res))\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    let result = ResultsData(stats)\r\n    setResults(result)\r\n  },[stats])\r\n\r\n  function inputResults(data) {\r\n    setSelected(data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <StatsContext.Provider value={stats}>\r\n        <ResultsContext.Provider value={{results, selected, inputResults}}>\r\n          <Route path=\"/\" component={TitleBanner}/>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route path=\"/results-vegas\" component={ResultsVegas}/>\r\n          <Route path=\"/vegas-details\" component={VegasDetails}/>\r\n          <Route path=\"/results-lineGrinding\" component={ResultsLineGrinding}/>\r\n          <Route path=\"/lineGrinding-details\" component={LineGrindingDetails}/>\r\n          <Route path=\"/results\" component={Results}/>\r\n          <Route path=\"/results-details\" component={ResultsDetails}/>\r\n          <Route path=\"/results-compare\" component={CompareDetails}/>\r\n        </ResultsContext.Provider>\r\n      </StatsContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}